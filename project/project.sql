CREATE TABLE otus."credit_card" (
                                    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                    "card_number" varchar(20) NOT NULL,
                                    "balance" decimal(19,4) NOT NULL,
                                    "customer_fk" int NOT NULL,
                                    "main" boolean NOT NULL DEFAULT false,
                                    "active" boolean NOT NULL DEFAULT true
);

CREATE TABLE otus."customer" (
                                 "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                 "first_name" varchar(30) NOT NULL,
                                 "last_name" varchar(30) NOT NULL
);

CREATE TABLE otus."customer_history" (
                                         "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                         "history" json NOT NULL
);

CREATE TABLE otus."email" (
                              "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                              "email_text" varchar(30) NOT NULL,
                              "active" boolean NOT NULL DEFAULT true,
                              "main" boolean NOT NULL DEFAULT false,
                              "customer_fk" int NOT NULL
);

CREATE TABLE otus."manufacturer" (
                                     "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                     "name" varchar(40) NOT NULL
);

CREATE TABLE otus."phone" (
                              "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                              "phone_number" varchar(20) NOT NULL,
                              "active" boolean NOT NULL DEFAULT true,
                              "main" boolean NOT NULL DEFAULT false,
                              "customer_fk" int NOT NULL
);

CREATE TABLE otus."product" (
                                "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                "name" varchar(50) NOT NULL,
                                "manufacturer_fk" int NOT NULL,
                                "unit_fk" int NOT NULL,
                                "description" text
);

CREATE TABLE otus."product_category" (
                                         "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                         "name" varchar(60) NOT NULL
);

CREATE TABLE otus."product_category_ref" (
                                             "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                             "product_category_fk" int NOT NULL,
                                             "product_fk" int NOT NULL
);

CREATE TABLE otus."product_item" (
                                     "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                     "supplier_fk" int NOT NULL,
                                     "product_fk" int NOT NULL,
                                     "delivery_date" date NOT NULL,
                                     "price" decimal(19,4) NOT NULL,
                                     "amount" decimal(10,2) NOT NULL
);

CREATE TABLE otus."purchase" (
                                 "id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                 "customer_id" int NOT NULL,
                                 "delivary_date" date NOT NULL,
                                 PRIMARY KEY ("id", "delivary_date")
) PARTITION BY RANGE (delivary_date);

CREATE TABLE otus.purchase_2024 PARTITION OF otus.purchase FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');
CREATE TABLE otus.purchase_2025 PARTITION OF otus.purchase FOR VALUES FROM ('2025-01-01') TO ('2026-01-01');
CREATE TABLE otus.purchase_2026 PARTITION OF otus.purchase FOR VALUES FROM ('2026-01-01') TO ('2027-01-01');
CREATE TABLE otus.purchase_2027 PARTITION OF otus.purchase FOR VALUES FROM ('2027-01-01') TO ('2028-01-01');

CREATE TABLE otus."purchase_item" (
                                      "id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                      "purchase_id" bigint NOT NULL,
                                      "product_id" bigint NOT NULL,
                                      "amount" decimal(10,2) NOT NULL,
                                      "total_cost" decimal(19,4) NOT NULL,
                                      "delivery_date" date NOT NULL,
                                      PRIMARY KEY ("id", "delivery_date")
) PARTITION BY RANGE (delivery_date);

CREATE TABLE otus.purchase_item_2024 PARTITION OF otus.purchase_item FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');
CREATE TABLE otus.purchase_item_2025 PARTITION OF otus.purchase_item FOR VALUES FROM ('2025-01-01') TO ('2026-01-01');
CREATE TABLE otus.purchase_item_2026 PARTITION OF otus.purchase_item FOR VALUES FROM ('2026-01-01') TO ('2027-01-01');
CREATE TABLE otus.purchase_item_2027 PARTITION OF otus.purchase_item FOR VALUES FROM ('2027-01-01') TO ('2028-01-01');

CREATE TABLE otus."supplier" (
                                 "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                 "name" varchar(40) NOT NULL
);

CREATE TABLE otus."unit" (
                             "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                             "name" varchar(30) NOT NULL
);

CREATE INDEX "credit_card_customer_fk_idx" ON otus."credit_card" ("customer_fk");

CREATE UNIQUE INDEX "email_email_text_idx" ON otus."email" ("email_text");

CREATE INDEX "email_customer_fk_idx" ON otus."email" ("customer_fk");

CREATE UNIQUE INDEX "name" ON otus."manufacturer" ("name");

CREATE UNIQUE INDEX "phone_number" ON otus."phone" ("phone_number");

CREATE INDEX "phone_customer_fk_idx" ON otus."phone" ("customer_fk");

CREATE UNIQUE INDEX "product_name_idx" ON otus."product" ("name");

CREATE UNIQUE INDEX "product_category_name_idx" ON otus."product_category" ("name");

CREATE INDEX "product_item_product_fk_idx" ON otus."product_item" ("product_fk");

CREATE INDEX "pi_purchase_id_idx" ON otus."purchase_item" ("purchase_id");

CREATE INDEX "purchase_item_delivery_date_idx" ON otus."purchase_item" ("delivery_date");

CREATE UNIQUE INDEX "supplier_name_idx" ON otus."supplier" ("name");

COMMENT ON COLUMN otus."credit_card"."card_number" IS 'Credit card number';

COMMENT ON COLUMN otus."credit_card"."balance" IS 'Balance';

COMMENT ON COLUMN otus."manufacturer"."name" IS 'Manufacturer name';

COMMENT ON COLUMN otus."product"."name" IS 'Product name';

COMMENT ON COLUMN otus."product"."unit_fk" IS 'Product unit';

COMMENT ON COLUMN otus."product_category"."name" IS 'Product category name';

COMMENT ON COLUMN otus."product_item"."delivery_date" IS 'Date when product can be delivered';

COMMENT ON COLUMN otus."product_item"."price" IS 'Price';

COMMENT ON COLUMN otus."product_item"."amount" IS 'Available count in warehousefor supplier';

COMMENT ON COLUMN otus."purchase"."delivary_date" IS 'Date of delivering the whole order';

COMMENT ON COLUMN otus."purchase_item"."amount" IS 'Count of bought product';

COMMENT ON COLUMN otus."purchase_item"."total_cost" IS 'Total cost for current price and count';

COMMENT ON COLUMN otus."purchase_item"."delivery_date" IS 'Date of delivering the purchase';

COMMENT ON COLUMN otus."unit"."name" IS 'Product unit';

ALTER TABLE otus."credit_card" ADD CONSTRAINT "credit_card_ibfk_1" FOREIGN KEY ("customer_fk") REFERENCES otus."customer" ("id");

ALTER TABLE otus."email" ADD CONSTRAINT "email_ibfk_1" FOREIGN KEY ("customer_fk") REFERENCES otus."customer" ("id");

ALTER TABLE otus."product" ADD FOREIGN KEY ("unit_fk") REFERENCES otus."unit" ("id");

ALTER TABLE otus."product" ADD FOREIGN KEY ("manufacturer_fk") REFERENCES otus."manufacturer" ("id");

ALTER TABLE otus."product_category_ref" ADD FOREIGN KEY ("product_fk") REFERENCES otus."product" ("id");

ALTER TABLE otus."product_category_ref" ADD FOREIGN KEY ("product_category_fk") REFERENCES otus."product_category" ("id");

ALTER TABLE otus."product_item" ADD FOREIGN KEY ("product_fk") REFERENCES otus."product" ("id");

ALTER TABLE otus."product_item" ADD FOREIGN KEY ("supplier_fk") REFERENCES otus."supplier" ("id");

ALTER TABLE otus."phone" ADD CONSTRAINT "phone._ibfk_1" FOREIGN KEY ("customer_fk") REFERENCES otus."customer" ("id");